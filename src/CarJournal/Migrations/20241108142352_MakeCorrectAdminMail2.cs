using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace CarJournal.Migrations
{
    /// <inheritdoc />
    public partial class MakeCorrectAdminMail2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -1,
                columns: new[] { "Email", "PasswordHash", "PasswordSalt" },
                values: new object[] { "admin@gmail.com", new byte[] { 114, 144, 20, 233, 66, 110, 48, 3, 56, 18, 127, 90, 249, 116, 170, 93, 253, 94, 233, 66, 114, 202, 12, 245, 174, 87, 47, 19, 244, 196, 101, 123, 35, 251, 135, 41, 39, 187, 145, 238, 35, 155, 194, 14, 112, 37, 31, 223, 133, 101, 217, 54, 200, 33, 71, 145, 79, 135, 163, 93, 202, 163, 197, 60 }, new byte[] { 5, 123, 168, 197, 43, 202, 104, 74, 91, 158, 51, 133, 30, 232, 170, 238, 214, 169, 151, 111, 98, 93, 188, 160, 25, 47, 79, 88, 71, 2, 146, 202, 182, 188, 145, 189, 4, 27, 104, 173, 25, 216, 232, 41, 5, 10, 208, 61, 220, 199, 234, 25, 115, 195, 154, 59, 27, 71, 161, 196, 173, 250, 120, 118, 7, 10, 252, 102, 16, 76, 195, 146, 98, 148, 2, 91, 215, 178, 109, 170, 82, 198, 56, 221, 10, 134, 171, 54, 53, 191, 99, 42, 70, 174, 36, 163, 161, 143, 225, 254, 187, 51, 144, 86, 15, 31, 248, 119, 227, 183, 92, 188, 39, 254, 161, 227, 76, 8, 116, 70, 216, 10, 162, 228, 14, 60, 233, 68 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -1,
                columns: new[] { "Email", "PasswordHash", "PasswordSalt" },
                values: new object[] { "admin", new byte[] { 0, 24, 240, 172, 6, 229, 229, 157, 188, 59, 216, 0, 94, 65, 121, 73, 18, 89, 161, 167, 15, 230, 44, 79, 174, 133, 251, 249, 255, 174, 91, 199, 243, 204, 157, 26, 196, 131, 166, 35, 247, 116, 31, 169, 109, 200, 97, 41, 38, 53, 127, 149, 236, 175, 198, 246, 97, 186, 94, 200, 46, 71, 44, 216 }, new byte[] { 5, 243, 229, 181, 245, 214, 205, 218, 114, 242, 183, 141, 185, 228, 70, 81, 158, 72, 209, 226, 72, 212, 0, 165, 81, 230, 186, 79, 252, 118, 109, 68, 160, 107, 82, 100, 187, 178, 234, 11, 9, 1, 171, 65, 30, 81, 186, 183, 221, 20, 200, 142, 99, 179, 62, 158, 25, 228, 119, 7, 80, 143, 75, 156, 176, 115, 14, 237, 227, 147, 120, 57, 57, 76, 168, 195, 34, 26, 90, 104, 146, 126, 114, 45, 28, 202, 208, 194, 132, 109, 64, 120, 230, 83, 171, 105, 8, 185, 25, 73, 220, 8, 222, 198, 86, 67, 69, 47, 130, 169, 147, 178, 26, 128, 27, 90, 191, 198, 199, 4, 100, 65, 111, 237, 198, 220, 9, 46 } });
        }
    }
}
